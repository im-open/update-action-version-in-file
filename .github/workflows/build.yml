name: Build and Check for Changes
on:
  # This workflow uses the pull_request trigger which prevents write permissions and secrets
  # access to the target repository from public forks.  This should remain as a pull_request
  # trigger because checkout, build, format and checking for changes do not need elevated
  # permissions to the repository.  The reduced permissions for public forks is adequate.
  pull_request:
  # Don't include any specific paths here so we always get a build that produces a status
  # check that our Branch Protection Rules can use.  Having a status check also allows us
  # to require that branches be up to date before they are merged.

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Increment the version
        id: version
        uses: im-open/git-version-lite@v2.1.0
        with:
          create-ref: false
          default-release-type: major

      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Build
        run: npm run build

      - name: Format
        run: npm run format

      - name: Update readme with latest version
        if: matrix.operating-system == 'ubuntu-latest'
        uses: ./
        with:
          file-to-update: './README.md'
          action-name:  'im-open/update-action-version-in-file'
          updated-version: ${{ steps.version.outputs.NEXT_VERSION }}

      - name: Check for unstaged changes
        if: matrix.operating-system == 'ubuntu-latest'
        run: |
          if [[ "$(git status --porcelain)" != "" ]]; then
            echo "There are changes to commit"
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "Update readme with latest version and/or recompile the action."
            git push origin HEAD:${{ github.head_ref }}
          else
            echo "There were no changes to commit"
          fi